import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Leaderboard from './page/Leaderboard';
import './App.css';

function App() {
    const [leaderboardData, setLeaderboardData] = useState([]);
    const [data, setData] = useState(null); // Store the raw data for debugging

    useEffect(() => {
        fetchLeaderboard();
    }, []);

    const fetchLeaderboard = async () => {
        try {
            const response = await axios.get('/scores.json'); // Use axios.get
            setData(response.data); // Store raw data for debugging
            setLeaderboardData(Object.values(response.data || {}).sort((a, b) => b.score - a.score)); // Sort and convert to array
        } catch (error) {
            console.error("Error fetching leaderboard data", error);
        }
    };

    const addParticipant = async (name, score, git) => {
        try {
            await axios.post('/scores.json', { name, score, git }); // Use axios.post
            fetchLeaderboard(); // Refresh the leaderboard after adding
        } catch (error) {
            console.error("Error adding participant", error);
        }
    };

    return (
        <div className="App">
            <h1>Leaderboard</h1>
            <ParticipantForm addParticipant={addParticipant} />
            <Leaderboard leaderboardData={leaderboardData} />
            <div>
                {/* Conditionally render the raw data for debugging */}
                {data && <pre>{JSON.stringify(data, null, 2)}</pre>} 
            </div>
        </div>
    );
}

function ParticipantForm({ addParticipant }) {
    const [name, setName] = useState('');
    const [score, setScore] = useState('');
    const [git, setGit] = useState('');

    const handleSubmit = (e) => {
        e.preventDefault();
        if (!name || !score || !git) return;
        addParticipant(name, parseInt(score, 10), git); // Parse score to integer
        setName('');
        setScore('');
        setGit('');
    };

    return (
        <form onSubmit={handleSubmit} className="participant-form">
            <input type="text" placeholder="Participant Name" value={name} onChange={(e) => setName(e.target.value)} required />
            <input type="number" placeholder="Score" value={score} onChange={(e) => setScore(e.target.value)} required />
            <input type="text" placeholder="GitHub Link" value={git} onChange={(e) => setGit(e.target.value)} required />
            <button type="submit">Add Participant</button>
        </form>
    );
}

export default App;